using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace Course
{
    class CatchErrors
    {
        public static bool IsNegative(int num) // //Проверка поступающих чисел
        {
            if (num < 0)
                return true;

            return false;
        }
        public static bool IsNegative(double num) // //Проверка поступающих чисел
        {
            if (num < 0)
                return true;

            return false;
        }
        public static bool CheckFile(string filename) // Проверка на открытие файла
        {
            try
            {
                StreamReader test = new StreamReader(filename);
            }
            catch (Exception e)
            {
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine("Ошибка: " + e.Message);
                Console.ResetColor();
                return false;
            }

            return true;
        }

        public static bool CheckName(string str) //Проверка поступающих строк
        {
            for (int i = 0; i < str.Length; i++)
            {
                if (str[i] >= '0' && str[i] <= '9')
                {
                    return true;
                }
            }

            if (str.Length > 256)
            {
                return true;
            }

            return false;
        }

        public static bool CheckPhoneNumber(string str) //телефон
        {
            for (int i = 0; i < str.Length; i++)
            {
                if ((str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z'))
                {
                    return true;
                }
            }

            if (str.Length != 18)
            {
                return true;
            }    

            return false;
        }

        public static bool CheckDate(string str)
        {
            for (int i = 0; i < str.Length; i++)
            {
                if ((str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z'))
                {
                    return true;
                }
            }

            if (str.Length != 9 && str.Length != 10)
            {
                return true;
            }

            return false;
        }

        public static bool CheckContractNumber(string str)
        {
            for (int i = 0; i < str.Length; i++)
            {
                if ((str[i] <= 0 && str[i] >= 9))
                {
                    return true;
                }
            }

            if (str.Length != 6)
            {
                return true;
            }

            return false;
        }

        public static bool CheckInsuranceType(string str)
        {
            int i = 0;

            if (str == "Страхование от несчастных случаев и болезней" || str == "Медицинское страхование" || str == "Страхование средств наземного транспорта (за исключением средств железнодорожного транспорта" 
                || str == "Страхование средств железнодорожного транспорта" || str == "Страхование средств воздушного транспорта" || str == "Страхование средств водного транспорта"
                || str == "Страхование грузов" || str == "Сельскохозяйственное страхование (страхование урожая, сельскохозяйственных культур, многолетних насаждений, животных)"
                || str == "Страхование имущества юридических лиц, за исключением транспортных средств и сельскохозяйственного страхования"
                || str == "Страхование имущества граждан, за исключением транспортных средств" || str == "Страхование гражданской ответственности владельцев автотранспортных средств"
                || str == "Страхование гражданской ответственности владельцев средств воздушного транспорта" || str == "Страхование гражданской ответственности владельцев средств водного транспорта"
                || str == "Страхование гражданской ответственности владельцев средств железнодорожного транспорта" || str == "Страхование гражданской ответственности организаций, эксплуатирующих опасные объекты"
                || str == "Страхование гражданской ответственности за причинение вреда вследствие недостатков товаров, работ, услуг" || str == "Страхование гражданской ответственности за причинение вреда третьим лицам"
                || str == "Страхование гражданской ответственности за неисполнение или ненадлежащее исполнение обязательств по договору" || str == "Страхование финансовых рисков"
                || str == "Обязательное государственное страхование жизни и здоровья военнослужащих, граждан, призванных на военные сборы, лиц рядового и начальствующего состава органов внутренних дел Российской Федерации, Государственной противопожарной службы, сотрудников учреждений и органов уголовно-исполнительной системы, сотрудников войск национальной гвардии Российской Федерации"
                || str == "Обязательное страхование гражданской ответственности владельцев транспортных средств"
                || str == "Обязательное страхование гражданской ответственности перевозчика за причинение вреда жизни, здоровью, имуществу пассажиров и о порядке возмещения такого вреда, причиненного при перевозках пассажиров метрополитеном (в лицензии – Обязательное страхование гражданской ответственности перевозчика за причинение при перевозках пассажиров вреда их жизни, здоровью, имуществу"
                || str == "Обязательное страхование гражданской ответственности владельца опасного объекта за причинение вреда в результате аварии на опасном объекте")
            {
                i = 1;
            }

            if (i == 1)
            {
                return false;
            }
            else
            {
                return true;
            }

        }
    }
}
